enum ReleaseType {
  ALBUM
  EP
  LP
  PODCAST
  SINGLE
}

type Album implements Node {
  alias: String!
  artworkId: String
  createdAt: DateTime!
  duration: Int
  explicit: Boolean!
  genres: [String]
  id: Int!
  name: String!
  numTracks: Int!
  releaseDate: DateTime
  releaseType: ReleaseType
  uploaderId: String!
  artwork: Image
  uploadedBy: User!
  tracks: [Track]
  artists: [Artist]
}

type Query {
  album(id: Int!): Album
  albums: [Album]
}

type Mutation {
  createAlbum(input: AlbumCreatePayload!): Album
  deleteAlbum(id: Int!): Album
}

input ArtistPayload {
  name: NonEmptyString!
}

input ArtworkPayload {
  url: NonEmptyString!
}

input TrackPayload {
  artists: [ArtistPayload!]!
  duration: Duration!
  featuring: [ArtistPayload!]
  name: NonEmptyString!
  trackNumber: Int!
}

input AlbumCreatePayload {
  artists: [ArtistPayload!]!
  artwork: ArtworkPayload
  genres: [NonEmptyString!]
  name: NonEmptyString!
  releaseDate: DateTime!
  releaseType: ReleaseType!
  tracks: [TrackPayload!]!
}
