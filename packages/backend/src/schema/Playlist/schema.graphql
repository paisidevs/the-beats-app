enum Privacy {
  PRIVATE
  PUBLIC
  UNLISTED
}

type PlaylistTrack implements Node {
  addedAt: DateTime!
  addedById: String!
  id: ID!
  playlistId: String!
  trackId: String!
  addedBy: User!
  playlist: Playlist!
  track: Track!
}

type Playlist implements Node {
  id: ID!
  alias: String!
  artwork: Image
  collaborative: Boolean!
  createdAt: DateTime!
  creator: User!
  creatorId: ID!
  description: String
  duration: Int!
  name: String!
  numTracks: Int!
  privacy: Privacy!
  tracks: [PlaylistTrack]
}

input CreatePlaylistInput {
  name: NonEmptyString!
  trackId: ID
}

input AddToPlaylistInput {
  playlistId: ID!
  trackId: ID!
}

type Query {
  playlist(id: ID!): Playlist
  playlists: [Playlist]
}

type Mutation {
  addToPlaylist(input: AddToPlaylistInput!): Playlist
  createPlaylist(input: CreatePlaylistInput!): Playlist
}
